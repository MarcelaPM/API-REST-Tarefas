from flask import Flask, jsonify,request
import json

app=Flask(__name__)

tarefas_info=[{'id':0,'responsável':'nome1','tarefa':'extrair dados','status':'concluido'},{'id':1,'responsável':'nome2','tarefa':'analisar dados','status':'executando'},       {'id':2,'responsável':'nome3','tarefa':'publicar resultados','status':'pendente'}]

@app.route('/<int:id>',methods=['GET','PUT','DELETE'])
def tarefa(id):
  if request.method =='GET':
    try:
        resposta=tarefas_info[id]
    except IndexError:
      mensagem='Tarefa ID: {} não existe'.format(id)
      resposta={'status':'erro','mensagem':mensagem}
    except Exception: 
      mensagem='Erro desconhecido, procure o responsável pela API'
      resposta={'status':'erro','mensagem':mensagem}
      
  elif request.method =='PUT':
      dados=json.loads(request.data)
      mensagem1='Atenção, só status da tarefa pode ser alterado'
      mensagem='Status da tarefa alterado'
      tarefas_info[id]['status']=dados
      alteracao=tarefas_info[id]
      resposta={'mensagem1':mensagem1,'mensagem':mensagem,'alteração':alteracao}
  elif request.method=='DELETE':
    tarefas_info.pop(id)
    mensagem='Registro excluído'
    resposta={'status':'exito','mensagem':mensagem}
    print(tarefas_info)
  return jsonify(resposta)
  
@app.route('/new',methods=['GET','POST'])
def new_tarefa():
  if request.method == 'POST':
    dados=json.loads(request.data)
    posicao=len(tarefas_info)
    #dados['id']=posicao
    tarefas_info.append(dados)
    return jsonify(tarefas_info[posicao])
  elif request.method == 'GET':
    return jsonify(tarefas_info)
  
app.run(host='0.0.0.0')